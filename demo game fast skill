#include<iostream>
#include<fstream>
#include<string.h>
#include<time.h>
#include<Windows.h>
#include<conio.h>
#include"console.h"
using namespace std;
void clrscr()
{
	CONSOLE_SCREEN_BUFFER_INFO	csbiInfo;                  
	HANDLE	hConsoleOut;
	COORD	Home = {0,0};
	DWORD	dummy;

	hConsoleOut = GetStdHandle(STD_OUTPUT_HANDLE);
	GetConsoleScreenBufferInfo(hConsoleOut,&csbiInfo);

	FillConsoleOutputCharacter(hConsoleOut,' ',csbiInfo.dwSize.X * csbiInfo.dwSize.Y,Home,&dummy);
	csbiInfo.dwCursorPosition.X = 0;
	csbiInfo.dwCursorPosition.Y = 0;
	SetConsoleCursorPosition(hConsoleOut,csbiInfo.dwCursorPosition);
}


//screen: goto [x,y]
void gotoXY (int column, int line)
{
	COORD coord;
	coord.X = column;
	coord.Y = line;
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE),coord);
}


//screen: get [x]
int whereX()
{
	CONSOLE_SCREEN_BUFFER_INFO csbi;
	if(GetConsoleScreenBufferInfo(GetStdHandle(STD_OUTPUT_HANDLE), &csbi))
		return csbi.dwCursorPosition.X;
	return -1;
}


//screen: get [y]
int whereY()
{
	CONSOLE_SCREEN_BUFFER_INFO csbi;
	if(GetConsoleScreenBufferInfo(GetStdHandle(STD_OUTPUT_HANDLE), &csbi))
		return csbi.dwCursorPosition.Y;
	return -1;
}


void TextColor (int color)
{
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE) , color);
}
enum ViTri{LEFT,RIGHT};
enum ViChi{UP,DOWN};
enum DiChi{UPK,DOWNK};
enum DiTri{UPH,DOWNH};
struct K{
	char arr[21];
	char a[21];
	char ar[21];
	char ark[21];
	int x,y,z,t,u,v,w,q;
	enum ViTri vt;
	enum ViChi vc;	
	enum DiChi dc;
	enum DiTri dt;	
};
int main(){
		cout<<"\a";
	ifstream FileIn;
	FileIn.open("GioithieuGame.txt",ios::in);
	while(!FileIn.eof()){
		char k;
		FileIn.get(k);
		Sleep(20);
		TextColor(11);
		cout<<k;
	}
	FileIn.close();
	srand(time(NULL));
	struct K K;
	strcpy(K.arr,"^"); 
	strcpy(K.a,"#");
	strcpy(K.ar,"#");
	strcpy(K.ark,"#");
	K.x=0;
	K.y=50;
	K.z=10;
	K.t=0;
	K.u=25;
	K.v=rand()%40;
	K.w=40;
	K.q=rand()%40;
	K.vt=RIGHT;
	K.vc=DOWN;
	K.dc=DOWNK;
	K.dt=DOWNH;
	gotoXY(25,19);
	printf("Nhap so roi nhan Enter");
	gotoXY(27,22);
	printf("1.VAO GAME");
	gotoXY(27,23);
	printf("2.THOAT GAME");
	printf("\n");
	int n;
	scanf("%d",&n);
	switch(n){
		case 1:while(1){
	clrscr();
	gotoXY(K.x,K.y);
	TextColor(10);
	cout<<K.arr;
		gotoXY(K.z,K.t);
		TextColor(13);
		cout<<K.a;
			gotoXY(K.u,K.v);
			TextColor(11);
			cout<<K.ar;
				gotoXY(K.w,K.q);
				TextColor(7);
				cout<<K.ark;
		int i;
		for(i=0;i<=50;i++){			//xu li bien
		gotoXY(50,i);
		TextColor(14);
		putchar(179);		
	}
		if(kbhit()){				//phim nhan vao
			char key=getch();
			if(key=='A'||key=='a')
			K.vt=LEFT;
			else if(key=='D'||key=='d')
			K.vt=RIGHT;}
		if(K.t>=50)
		K.vc=UP;
		else if(K.t<=0)
		K.vc=DOWN;
		else if(K.v>=50)
		K.dc=UPK;
		else if(K.v<=0)
		K.dc=DOWNK;
		else if(K.q>=50)
		K.dt=UPH;
		else if(K.q<=0)
		K.dt=DOWNH;
		if(K.vt==RIGHT)
		K.x++;
		else if(K.vt==LEFT)
		K.x--;
		if(K.vc==DOWN)
		K.t++;
		else if(K.vc==UP)
		K.t--;
		if(K.dc==DOWNK)
		K.v++;
		else if(K.dc==UPK)
		K.v--;
		if(K.dt==DOWNH)
		K.q++;
		else if(K.dt==UPH)
		K.q--;
		if((K.x==K.z&&K.y==K.t)||(K.x==K.u&&K.y==K.v)||(K.x==K.w&&K.y==K.q)){
		gotoXY(60,30);
		TextColor(12);
		cout<<"THANG";
		gotoXY(60,31);
		cout<<"Press any key";
		while(getch()!=13)
		break;
		}
		else if(K.x>=50||K.x<=0){
		gotoXY(60,32);
		TextColor(12);
		cout<<"THUA";
		while(getch()!=13)
		break;	
		}
		Sleep(25);		
}
		default: break;
		return 0;
	}
system("pause");
return 0;
			
			
			
}
